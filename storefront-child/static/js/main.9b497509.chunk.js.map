{"version":3,"sources":["components/PriceSlider.js","App.js","reportWebVitals.js","index.js"],"names":["PriceSlider","useState","price","setPrice","className","style","onChange","e","target","value","type","name","id","min","max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAiCeA,G,MA9BK,WAAM,MAEIC,mBAAS,OAFb,mBAEfC,EAFe,KAERC,EAFQ,KAItB,OACI,qCACI,sBAAKC,UAAU,aAAf,UACA,qBAAKA,UAAU,WACf,qBAAKA,UAAU,gBAAgBC,MAAO,CAAC,MAAUH,EAAM,IAAI,IAAO,OAC9D,uBACII,SAAU,SAACC,GAAD,OAAOJ,EACbI,EAAEC,OAAOC,OAAS,KAAOF,EAAEC,OAAOC,OAAS,IAAMF,EAAEC,OAAOC,MAAQ,QAEtEA,MAAOP,EACPQ,KAAK,QACLC,KAAK,QACLC,GAAG,QACHC,IAAI,IAAIC,IAAI,QAChB,sBAAKV,UAAU,QAAf,cAAyBF,QAE7B,qBAAKE,UAAU,mCAAf,SACI,wBAAOA,UAAU,aAAjB,sBAAuC,0CAAoB,uBACvD,uBAAOM,KAAK,OAAOJ,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAOC,OAAS,KAAOF,EAAEC,OAAOC,OAAS,IAAMF,EAAEC,OAAOC,MAAQ,QAAQG,GAAG,aAAaD,KAAK,aAAaF,MAAOP,SAGxK,uBAAM,4BCjBHa,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCMSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b497509.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './PriceSlider.css';\n\nconst PriceSlider = () => {\n    // price hook\n    const [price, setPrice] = useState('150');\n\n    return (\n        <>\n            <div className=\"slideBlock\">\n            <div className=\"strack\"></div>\n            <div className=\"slideProgress\" style={{\"width\": (price/400*100) + \"%\"}}></div>\n                <input\n                    onChange={(e) => setPrice(\n                        e.target.value >= 100 && e.target.value <= 400 ? e.target.value : '100'\n                    )}\n                    value={price}\n                    type=\"range\"\n                    name=\"range\"\n                    id=\"range\"\n                    min=\"0\" max=\"400\" />\n                <div className=\"Price\">${price}</div>\n            </div>\n            <div className=\"imput_fields custom-imput-fields\">\n                <label className=\"price_prod\">YOU PAY: <small>(US$)</small><br />\n                    <input type=\"text\" onChange={(e) => setPrice(e.target.value >= 100 && e.target.value <= 400 ? e.target.value : '100')} id=\"price_prod\" name=\"price_prod\" value={price} />\n                </label>\n            </div>\n            <br /><br />\n        </>\n    );\n}\n\nexport default PriceSlider;","import './App.css';\nimport PriceSlider from './components/PriceSlider';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PriceSlider />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}